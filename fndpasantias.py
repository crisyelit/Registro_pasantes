# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the Odoo plugin for Dia !
from openerp import models, fields, api

class fnd_pas_tipos_alergias(models.Model):
    """Tabla referencial de tipos de alergias"""
    _name = 'fnd.pas.tipos_alergias'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion del tipo de alergia')
    tipo_alergia = fields.Char('Tipo de Alergia',size=120,required='True', help='Indique el tipo de alergia')


class fnd_pas_beneficiarios(models.Model):
    """Tabla de Registro Maestro de Beneficiarios"""
    _name = 'fnd.pas.beneficiarios'
    #_rec_name = ''
    pasantia_id = fields.Many2one('fnd.pas.pasantias','Beneficiarios', help='Beneficiario del pasante')
    nombre_beneficiario = fields.Char('Nombre del Beneficiario',size=50,required='True', help='Nombre del Beneficiario')
    apellido_beneficiario = fields.Char('Apellido del Beneficiario',size=50,required='True', help='Apellido del Beneficiario')
    parentesco_beneficiario = fields.Many2one('fnd.pas.parentescos','Parentesco del Beneficiario', help='Parentesco del Beneficiario')
    porcentaje = fields.Integer('Porcentaje', help='Porcentaje del Beneficiario')


class fnd_pas_convenios(models.Model):
    """Tabla de Registro Maestro de Convenios"""
    _name = 'fnd.pas.convenios'
    #_rec_name = ''
    codigo = fields.Char('Codigo de Convenio',size=20,required='True', help='Codigo de identificacion del convenio')
    empresa_id = fields.Many2one('res_partner','Empresa', help='Empresa con la que se celebra el convenio')
    pasantias_ids = fields.One2many('fnd.pas.pasantias','convenio_id','Pasantias', help='Relacion de pasantias que integran este convenio')
    fecha_inicio = fields.Datetime('Fecha inicio', help='Fecha de inicio de pasantia')
    fecha_final = fields.Datetime('fecha Final', help='Fecha Final ')
    promotor_id = fields.Many2one('fnd.pas.promotores','Promotor', help='Promotor que atiende la empresa')


class fnd_pas_promotores(models.Model):
    """Tabla de Registro Maestro de Promotores"""
    _name = 'fnd.pas.promotores'
    #_rec_name = ''
    cedula = fields.Char('Cedula de Promotor',size=10,required='True', help='Cedula del promotor')
    nombre_promotor = fields.Char('Nombre del Promotor',size=50,required='True', help='Nombre del promotor')
    apellido_promotor = fields.Char('Apellido del promotor',size=50,required='True', help='Apellido del promotor')


class fnd_pas_tipo_especialidades(models.Model):
    """Tabla referencial de tipos de Especialidades"""
    _name = 'fnd.pas.tipo_especialidades'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de Especialidad')
    tipo_especialidad = fields.Char('Tipo de Especialidad',size=120,required='True', help='Nombre de la especialidad que posee')


class fnd_pas_instituciones(models.Model):
    """Tabla Registro Maestro de Instituciones"""
    _name = 'fnd.pas.instituciones'
    #_rec_name = ''
    rif = fields.Char('RIF de la Institucion',size=12,required='True', help='RIF de la institucion')
    razon_social = fields.Char('Razon social de la Institucion',size=120,required='True', help='Razon social de la Institucion')
    acronimo = fields.Char('Acronimo de la Institucion',size=20,required='True', help='Acronimo de la Institucion')
    nombre_institucion = fields.Char('Nombre de Institucion',size=50,required='True', help='Nombre de la Institucion')
    direccion = fields.Text('Direccion', help='Direccion de la Institucion')
    telefono = fields.Integer('Telefono', help='Telefono de la Institucion')
    tipo_institucion = fields.Many2one('fnd.pas.tipos_instituciones','Tipo de Institucion', help='Tipo de Institucion')


class fnd_pas_nivel_academico(models.Model):
    """Tabla referencial de Niveles Academicos"""
    _name = 'fnd.pas.nivel_academico'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion del nivel academico')
    nivel_academico = fields.Char('Nivel Educativo',size=120,required='True', help='Descripcion corta del nivel educativo')


class fnd_pas_parentescos(models.Model):
    """Tabla referencial de Parentescos"""
    _name = 'fnd.pas.parentescos'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion  del parentesco')
    parentesco = fields.Char('Parentesco',size=120,required='True', help='Tipo de parentesco')


class fnd_pas_turnos(models.Model):
    """Tabla referencial de turnos"""
    _name = 'fnd.pas.turnos'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de turnos')
    turno = fields.Char('Turno',size=120,required='True', help='Turno en la que cursa')


class fnd_pas_tipos_pasantias(models.Model):
    """Tabla referencial de tipos de pasantias"""
    _name = 'fnd.pas.tipos_pasantias'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de tipo de pasantia')
    tipo_pasantia = fields.Char('Tipo de pasantia',size=120,required='True', help='Nombre el tipo de pasantia')


class fnd_pas_pasantes(models.Model):
    """Tabla Maestra de Pasantes"""
    _name = 'fnd.pas.pasantes'
    #_rec_name = ''
    cedula = fields.Char('Numero de cedula',size=12,required='True', help='Codigo de identificacion del pasante')
    nombres = fields.Char('Nombres del pasante',size=50,required='True', help='Nombres del pasante')
    apellidos = fields.Char('Apellidos del pasante',size=50,required='True', help='Apellidos de pasante')
    fecha_nacimiento = fields.Datetime('Fecha de Nacimiento', help='Fecha de Nacimiento del pasante')
    correo_electronico = fields.Char('Correo electronico',size=100,required='True', help='Correo electronico del pasante')
    direccion_habitacion = fields.Text('Direccion de Habitacion', help='Direccion de la habitacion del pasante')
    telefono = fields.Char('Telefono de habitacion',size=50,required='True', help='Telefono de la habitacion del pasante')
    zurdo = fields.Selection([('si','SI'),('no','NO')],'Es Zurdo?', help='Es Zurdo?')
    alergias = fields.Selection([('si','SI'),('no','NO')],'Es alergico?', help='Es alergico?')
    tipo_alergia = fields.Many2one('fnd.pas.tipos_alergias','Indique alergia', help='Tipos de alergias que posee')
    especialidad = fields.Many2one('fnd.pas.tipo_especialidades','Tipo de especialidad', help='Tipos de especialidades que posee')
    nivel_educativo = fields.Selection([('tm','TM'),('tsu','TSU'),('univ','UNIV')],'Nivel de Educacion', help='Indique el nivel academico que posee')
    pasantias_ids = fields.One2many('fnd.pas.pasantias','pasante_id','Pasantias', help='Pasantias que ha realizado')


class fnd_pas_pasantias(models.Model):
    """Tabla de Registro Maestro de Pasantias"""
    _name = 'fnd.pas.pasantias'
    #_rec_name = ''
    pasante_id = fields.Many2one('fnd.pas.pasantes','Pasante', help='Pasante que realiza esta pasantia')
    empresa = fields.Many2one('res_partner','Empresa', help='Empresa donde realiza lapasantia')
    convenio_id = fields.Many2one('fnd.pas.convenios','Convenio', help='Convenio dentro del cual se incorporo esta pasantia')
    promotor = fields.Many2one('fnd.pas.promotores','Promotor', help='Promotor asignado')
    departamento_area = fields.Char('Departamento asignado o area', size=64,required='True', help='Departameto asignado o area donde realiza pasantia')
    tipo_pasantia = fields.Many2one('fnd.pas.tipos_pasantias','Tipo de pasantia', help='Tipo de pasantia realizada')
    condicion_nofirmante = fields.Many2one('fnd.pas.condicion_nofirmante','Condicion no firmante', help='Empresas o Institucines que no firman convenio')
    pasantia_desde = fields.Datetime('Pasantia desde', help='Fecha de inicio de pasantia')
    pasantia_hasta = fields.Datetime('Pasantia hasta', help='Fecha culminacion de pasantia')
    numero_semana = fields.Integer('Numero de semana',size=2,required='True', help='Numero de semanas de duracion de la pasantia')
    turno = fields.Many2one('fnd.pas.turnos','Turno', help='Turno de la pasantia')
    fecha_recepcion = fields.Datetime('Fecha de Recepcion documentos', help='Fecha de recepcion de pasantia')
    prorroga_desde = fields.Datetime('Prorroga desde', help='Fecha de inicio Prorroga de Pasantia')
    prorroga_hasta = fields.Datetime('Prorroga hasta', help='Fecha de culminacion Prorroga')
    semana_prorroga = fields.Integer('Semana Prorroga', help='Numero de semanas de prorroga')
    turno_prorroga = fields.Many2one('fnd.pas.turnos','Turno de la prorroga', help='Turno de la prorroga')
    condicion_registro = fields.Many2one('fnd.pas.condicion_registro','Condicion de registro', help='Condicion del registro de pasante')
    observacion = fields.Text('Observaciones', help='Observaciones de pasantia')
    observaciones_prorroga = fields.Text('Observacion de prorroga', help='Observaciones de la prorroga')


class fnd_pas_condicion_nofirmante(models.Model):
    """Tabla referencial de Condicion de no Firmantes"""
    _name = 'fnd.pas.condicion_nofirmante'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de tipo de pasantia')
    condicion_nofirmante = fields.Char('Condicion de no firmante',size=120,required='True', help='Condicion de no firmar de convenio')


class fnd_pas_condicion_registro(models.Model):
    """Tabla referencial de Condicion de Registro"""
    _name = 'fnd.pas.condicion_registro'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de tipo de pasantia')
    condicion_registro = fields.Char('Condicion de Registro',size=120,required='True', help='Condicion deRegistro del pasante')


class fnd_pas_tipos_instituciones(models.Model):
    """Tabla referencial de Tipo de Instituciones"""
    _name = 'fnd.pas.tipos_instituciones'
    #_rec_name = ''
    codigo = fields.Char('Codigo',size=3,required='True', help='Codigo de identificacion de tipo de pasantia')
    tipos_instituciones = fields.Char('Tipo de Instituciones',size=120,required='True', help='Tipos de Instituciones')


